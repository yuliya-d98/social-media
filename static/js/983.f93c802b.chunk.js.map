{"version":3,"file":"static/js/983.f93c802b.chunk.js","mappings":"0PAIMA,EAA6B,SAACC,GAAD,MAAY,CAC7CC,OAAQD,EAAME,KAAKD,S,iDCJrB,EAA4B,2BAA5B,EAAiE,yBAAjE,EAAuG,4BAAvG,EAA8I,0BAA9I,EAAsL,6BAAtL,EAAgO,4BAAhO,EAA0Q,6B,UCW1Q,EARmB,SAACE,GAChB,OACI,SAAC,KAAD,CAASC,UAAWC,EAAcC,GAAE,mBAAcH,EAAMI,IAAxD,SACKJ,EAAMK,QCInB,EARoB,SAACL,GACjB,OACI,0BACI,gBAAKC,UAAWC,EAAhB,SAAgCF,EAAMM,UCG5CC,GAAeC,EAAAA,EAAAA,GAAiB,KAWhCC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAlBD,EATL,SAACV,GACpB,OACI,kBAAMY,SAAUZ,EAAMa,aAAtB,WACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,EAAUC,SAAU,CAACC,EAAAA,EAAUX,GAAeF,KAAK,aAAaJ,UAAWC,EAAciB,MAAOnB,EAAMoB,aAAaC,eAAgBC,YAAY,wBAAwBC,KAAK,OAC9L,mBAAQtB,UAAWC,EAAnB,wBA8BZ,EAtBgB,SAACF,GACb,IAAMwB,EAAcxB,EAAMoB,aAAaK,WAAWC,KAAI,SAAAC,GAAM,OAAI,SAAC,EAAD,CAAYtB,KAAMsB,EAAOtB,KAAMD,GAAIuB,EAAOvB,QACpGwB,EAAe5B,EAAMoB,aAAaS,YAAYH,KAAI,SAAAI,GAAO,OAAI,SAAC,EAAD,CAAaxB,KAAMwB,EAAQxB,UAO9F,OACI,iBAAKL,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKsB,KAEL,iBAAKvB,UAAWC,EAAhB,UACK0B,GACD,SAACnB,GAAD,kBAAyBT,GAAzB,IAAgCY,SAXtB,SAACmB,GACnB/B,EAAMgC,YAAYD,EAAOE,uBCRjC,GAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAhBoB,SAACtC,GACrB,MAAO,CACHuB,aAAcvB,EAAMuB,iBAID,SAACgB,GACxB,MAAO,CACHJ,YAAa,SAACC,GACV,IAAMI,GAASC,EAAAA,EAAAA,GAAyBL,GACxCG,EAASC,SLRW,SAACE,GAAe,IACxCC,EADuC,0IAE3C,WACE,OAAKC,KAAKzC,MAAMF,QACT,SAACyC,GAAD,UAAeE,KAAKzC,SADI,SAAC,KAAD,CAAUG,GAAG,eAHH,GACbuC,EAAAA,WAWhC,OAJuCP,EAAAA,EAAAA,IAAQvC,EAARuC,CACrCK,KKIJ,CAGEG","sources":["hoc/with-auth-redirect.js","webpack://react-01/./src/components/main/dialogs/dialogs.module.css?14bd","components/main/dialogs/dialogItem/dialogItem.jsx","components/main/dialogs/messageItem/messageItem.jsx","components/main/dialogs/dialogs.jsx","components/main/dialogs/dialogsContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"dialogs_container__yido9\",\"dialogs\":\"dialogs_dialogs__MqD3N\",\"dialogItem\":\"dialogs_dialogItem__Q6EwB\",\"messages\":\"dialogs_messages__eqczW\",\"messageItem\":\"dialogs_messageItem__d51bV\",\"newMessage\":\"dialogs_newMessage__Rcx9t\",\"sendMessage\":\"dialogs_sendMessage__3GU1M\"};","import React from 'react';\r\nimport s from '../dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <NavLink className={s.dialogItem} to={`/dialogs/${props.id}`}>\r\n            {props.name}\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from '../dialogs.module.css';\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.messageItem}>{props.text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Field } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/forms-controls/forms-controls';\r\nimport DialogItem from './dialogItem/dialogItem';\r\nimport s from './dialogs.module.css';\r\nimport MessageItem from './messageItem/messageItem';\r\n\r\nconst maxLength400 = maxLengthCreator(400);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} validate={[required, maxLength400]} name='newMessage' className={s.newMessage} value={props.messagesPage.newMessageText} placeholder='write your message...' rows=\"5\" />\r\n            <button className={s.sendMessage}>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    const dialogItems = props.messagesPage.dialogData.map(dialog => <DialogItem name={dialog.name} id={dialog.id} />)\r\n    const messageItems = props.messagesPage.messageData.map(message => <MessageItem text={message.text} />)\r\n\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessage)\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.dialogs}>\r\n                {dialogItems}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageItems}\r\n                <AddMessageReduxForm {...props} onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../../hoc/with-auth-redirect';\r\nimport { sendMessageActionCreator } from '../../../redux/dialogs-reducer';\r\nimport Dialogs from './dialogs';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessage) => {\r\n            const action = sendMessageActionCreator(newMessage);\r\n            dispatch(action);\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs);"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","props","className","s","to","id","name","text","maxLength400","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","value","messagesPage","newMessageText","placeholder","rows","dialogItems","dialogData","map","dialog","messageItems","messageData","message","values","sendMessage","newMessage","compose","connect","dispatch","action","sendMessageActionCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}