{"version":3,"file":"static/js/594.5cc63d89.chunk.js","mappings":"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","sources":["redux/users-selectors.ts","webpack://react-01/./src/components/common/paginator/paginator.module.css?6840","components/common/paginator/paginator.tsx","webpack://react-01/./src/components/main/users/users.module.css?bbc2","components/main/users/user.tsx","components/main/users/usersSearchForm.tsx","components/main/users/users.tsx","components/main/users/usersContainer.tsx"],"sourcesContent":["import { createSelector } from 'reselect';\r\nimport { AppStateType } from './redux-store';\r\n\r\nconst getUsersDataSelector = (state: AppStateType) => {\r\n  return state.usersPage.usersData;\r\n};\r\n\r\nexport const getUsersData = createSelector(getUsersDataSelector, (users) => {\r\n  return users.filter(() => true);\r\n});\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n  return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n  return state.usersPage.filter;\r\n};\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n  return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n  return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"paginator_pagination__cc2kf\",\"pages\":\"paginator_pages__fdbeI\",\"page\":\"paginator_page__h+OLq\",\"button\":\"paginator_button__qNMIY\",\"active\":\"paginator_active__9MKRG\"};","import clsx from 'clsx';\r\nimport React, { useState } from 'react';\r\nimport s from './paginator.module.css';\r\n\r\ntype PropsType = {\r\n  totalItemsCount: number;\r\n  pageSize?: number;\r\n  numOfPages?: number;\r\n  onPageChanged: (p: number) => void;\r\n  currentPage: number;\r\n};\r\n\r\nconst Paginator: React.FC<PropsType> = ({\r\n  totalItemsCount,\r\n  pageSize = 10,\r\n  numOfPages = 10,\r\n  onPageChanged,\r\n  currentPage,\r\n}) => {\r\n  const initialPortionNumber = Math.ceil(currentPage / numOfPages);\r\n  const [portionNumber, setPortionNumber] = useState(initialPortionNumber);\r\n  const pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n  const leftPortionPageNumber = (portionNumber - 1) * numOfPages + 1;\r\n  let rightPortionPageNumber = portionNumber * numOfPages;\r\n  if (rightPortionPageNumber > pagesCount) rightPortionPageNumber = pagesCount;\r\n\r\n  const lastPortion = Math.ceil(pagesCount / numOfPages);\r\n  const pages: Array<number> = [];\r\n  for (let i = leftPortionPageNumber; i <= rightPortionPageNumber; i += 1) {\r\n    pages.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className={s.pagination}>\r\n      {portionNumber > 1 && (\r\n        <button onClick={() => setPortionNumber(1)} className={clsx(s.page, s.button)}>\r\n          {'<<'}\r\n        </button>\r\n      )}\r\n      {portionNumber > 1 && (\r\n        <button\r\n          onClick={() => setPortionNumber(portionNumber - 1)}\r\n          className={clsx(s.page, s.button)}\r\n        >\r\n          Prev\r\n        </button>\r\n      )}\r\n      <div className={s.pages}>\r\n        {pages.map((p) => (\r\n          <span\r\n            className={clsx(s.page, currentPage === p && [s.active])}\r\n            onClick={() => onPageChanged(p)}\r\n            key={p}\r\n          >\r\n            {p}\r\n          </span>\r\n        ))}\r\n      </div>\r\n      {portionNumber < lastPortion && (\r\n        <button\r\n          onClick={() => setPortionNumber(portionNumber + 1)}\r\n          className={clsx(s.page, s.button)}\r\n        >\r\n          Next\r\n        </button>\r\n      )}\r\n      {portionNumber < lastPortion && (\r\n        <button onClick={() => setPortionNumber(lastPortion)} className={clsx(s.page, s.button)}>\r\n          {'>>'}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"users_user__Sr8u0\",\"userImgAndFollow\":\"users_userImgAndFollow__u3rLV\",\"image\":\"users_image__5fLzH\",\"followButton\":\"users_followButton__2WH68\",\"userInfo\":\"users_userInfo__Cy0uP\",\"username\":\"users_username__kxcMD\",\"city\":\"users_city__85JCG\",\"text\":\"users_text__4Kr5D\"};","import { NavLink } from 'react-router-dom';\r\nimport s from './users.module.css';\r\n\r\ntype PropsType = {\r\n  userId: number;\r\n  name: string;\r\n  status: string | null;\r\n  photo: string;\r\n  followed: boolean;\r\n  followingInProgress: Array<number>;\r\n  follow: (userId: number) => void;\r\n  unfollow: (userId: number) => void;\r\n};\r\n\r\nconst User: React.FC<PropsType> = (props) => {\r\n  return (\r\n    <div className={s.user} id={props.userId.toString()}>\r\n      <div className={s.userImgAndFollow}>\r\n        <NavLink to={`/profile/${props.userId.toString()}`}>\r\n          <img src={props.photo} className={s.image} alt=\"avatar\" />\r\n        </NavLink>\r\n        {props.followed === true ? (\r\n          <button\r\n            disabled={props.followingInProgress.includes(props.userId)}\r\n            className={s.followButton}\r\n            onClick={() => props.unfollow(props.userId)}\r\n          >\r\n            Unfollow\r\n          </button>\r\n        ) : (\r\n          <button\r\n            disabled={props.followingInProgress.includes(props.userId)}\r\n            className={s.followButton}\r\n            onClick={() => props.follow(props.userId)}\r\n          >\r\n            Follow\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className={s.userInfo}>\r\n        <p className={s.username}>{props.name}</p>\r\n        <p className={s.city}>{`city, country`}</p>\r\n        <p className={s.status}>{props.status}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import { Field, Form, Formik } from 'formik';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { FilterType } from '../../../redux/users-reducer';\r\nimport { getUsersFilter } from '../../../redux/users-selectors';\r\n\r\nconst usersSearchFormValidate = () => {\r\n  const errors = {};\r\n  return errors;\r\n};\r\n\r\ntype UsersSearchFormPropsType = {\r\n  onFilterChanged: (filter: FilterType) => void;\r\n};\r\n\r\ntype FreindFilterType = 'true' | 'false' | 'null';\r\n\r\ntype FormValuesType = {\r\n  term: string;\r\n  friend: FreindFilterType;\r\n};\r\n\r\nconst convertFormValues = (values: FormValuesType) => ({\r\n  term: values.term,\r\n  friend: values.friend === 'null' ? null : values.friend === 'true',\r\n});\r\n\r\nconst UsersSearchForm = React.memo((props: UsersSearchFormPropsType) => {\r\n  const filter = useSelector(getUsersFilter);\r\n  const onSubmit = (\r\n    values: FormValuesType,\r\n    { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }\r\n  ) => {\r\n    const convertedValues = convertFormValues(values);\r\n    props.onFilterChanged(convertedValues);\r\n    setSubmitting(false);\r\n  };\r\n  return (\r\n    <Formik\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        term: filter.term,\r\n        friend: String(filter.friend) as FreindFilterType,\r\n      }}\r\n      validate={usersSearchFormValidate}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <Form>\r\n          <Field type=\"text\" name=\"term\" />\r\n          <Field name=\"friend\" as=\"select\">\r\n            <option value=\"null\">All</option>\r\n            <option value=\"true\">Only Followed</option>\r\n            <option value=\"false\">Only Unfollowed</option>\r\n          </Field>\r\n          <button type=\"submit\" disabled={isSubmitting}>\r\n            Find\r\n          </button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n\r\nexport default UsersSearchForm;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport defaultAvatar from '../../../assets/user-avatar.png';\r\nimport {\r\n  FilterType,\r\n  followThunkCreator,\r\n  getUsersThunkCreator,\r\n  unfollowThunkCreator,\r\n} from '../../../redux/users-reducer';\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getUsersData,\r\n  getUsersFilter,\r\n} from '../../../redux/users-selectors';\r\nimport Paginator from '../../common/paginator/paginator';\r\nimport Preloader from '../../common/preloader';\r\nimport User from './user';\r\nimport s from './users.module.css';\r\nimport UsersSearchForm from './usersSearchForm';\r\n\r\n// function useQuery() {\r\n//   return new URLSearchParams(useLocation().search);\r\n// }\r\n// const userId = query.get(\"userId\")\r\n\r\n// useNavigate & useSearchParams\r\n\r\nexport const Users: React.FC = () => {\r\n  const totalUsersCount = useSelector(getTotalUsersCount);\r\n  const pageSize = useSelector(getPageSize);\r\n  const currentPage = useSelector(getCurrentPage);\r\n  const users = useSelector(getUsersData);\r\n  const filter = useSelector(getUsersFilter);\r\n  const isFetching = useSelector(getIsFetching);\r\n  const followingInProgress = useSelector(getFollowingInProgress);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams({\r\n      page: currentPage.toString(),\r\n      count: pageSize.toString(),\r\n      // ...(currentPage != 1 && { page: currentPage.toString() }),\r\n      // ...(pageSize != 10 && { count: pageSize.toString() }),\r\n      ...(filter.term && { term: filter.term }),\r\n      ...(typeof filter.friend === 'boolean' && { friend: filter.friend.toString() }),\r\n    });\r\n    navigate(`/users?${params.toString()}`);\r\n  }, [filter, currentPage, pageSize]);\r\n\r\n  useEffect(() => {\r\n    debugger;\r\n    const search = location.search;\r\n    const params = new URLSearchParams(search);\r\n\r\n    let actualCurrentPage = currentPage;\r\n    const paramsCurrentPage = params.get('page');\r\n    if (paramsCurrentPage) {\r\n      actualCurrentPage = +paramsCurrentPage;\r\n    }\r\n\r\n    let actualPageSize = pageSize;\r\n    const paramsPageSize = params.get('count');\r\n    if (paramsPageSize) {\r\n      actualPageSize = +paramsPageSize;\r\n    }\r\n\r\n    let actualFilterTerm = filter.term;\r\n    const paramsTerm = params.get('term');\r\n    if (paramsTerm) {\r\n      actualFilterTerm = paramsTerm;\r\n    }\r\n\r\n    let actualFilterFriend = filter.friend;\r\n    const paramsFriend = params.get('friend');\r\n    switch (paramsFriend) {\r\n      case 'true':\r\n        actualFilterFriend = true;\r\n        break;\r\n      case 'false':\r\n        actualFilterFriend = false;\r\n        break;\r\n    }\r\n\r\n    const actualFilter: FilterType = {\r\n      term: actualFilterTerm,\r\n      friend: actualFilterFriend,\r\n    };\r\n    dispatch(getUsersThunkCreator(actualCurrentPage, actualPageSize, actualFilter));\r\n  }, []); // [] - componentDidMount\r\n\r\n  const onPageChanged = (pageNumber: number) => {\r\n    dispatch(getUsersThunkCreator(pageNumber, pageSize, filter));\r\n  };\r\n  const onFilterChanged = (filter: FilterType) => {\r\n    dispatch(getUsersThunkCreator(1, pageSize, filter));\r\n  };\r\n  const follow = (userId: number) => {\r\n    dispatch(followThunkCreator(userId));\r\n  };\r\n  const unfollow = (userId: number) => {\r\n    dispatch(unfollowThunkCreator(userId));\r\n  };\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <h2>Users</h2>\r\n      <UsersSearchForm onFilterChanged={onFilterChanged} />\r\n      <Paginator\r\n        totalItemsCount={totalUsersCount}\r\n        pageSize={pageSize}\r\n        currentPage={currentPage}\r\n        onPageChanged={onPageChanged}\r\n      />\r\n      {isFetching ? <Preloader /> : null}\r\n      {users.map((u) => (\r\n        <User\r\n          key={u.id}\r\n          name={u.name}\r\n          followed={u.followed}\r\n          status={u.status}\r\n          userId={u.id}\r\n          photo={u.photos.small ? u.photos.small : defaultAvatar}\r\n          follow={follow}\r\n          unfollow={unfollow}\r\n          followingInProgress={followingInProgress}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Users } from './users';\r\n\r\nconst UsersPage: React.FC = () => {\r\n  return <Users />;\r\n};\r\n\r\nexport default UsersPage;\r\n"],"names":["getUsersData","createSelector","state","usersPage","usersData","users","filter","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getUsersFilter","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","totalItemsCount","numOfPages","onPageChanged","initialPortionNumber","Math","ceil","useState","portionNumber","setPortionNumber","pagesCount","leftPortionPageNumber","rightPortionPageNumber","lastPortion","pages","i","push","className","s","onClick","clsx","map","p","props","id","userId","toString","to","src","photo","alt","followed","disabled","includes","unfollow","follow","name","status","usersSearchFormValidate","React","useSelector","enableReinitialize","initialValues","term","friend","String","validate","onSubmit","values","setSubmitting","convertedValues","convertFormValues","onFilterChanged","isSubmitting","type","as","value","Users","dispatch","useDispatch","navigate","useNavigate","location","useLocation","useEffect","params","URLSearchParams","page","count","search","actualCurrentPage","paramsCurrentPage","get","actualPageSize","paramsPageSize","actualFilterTerm","paramsTerm","actualFilterFriend","actualFilter","getUsersThunkCreator","followThunkCreator","unfollowThunkCreator","pageNumber","u","photos","small","defaultAvatar"],"sourceRoot":""}