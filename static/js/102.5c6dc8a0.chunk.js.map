{"version":3,"file":"static/js/102.5c6dc8a0.chunk.js","mappings":"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","sources":["webpack://react-01/./src/components/main/profile/profile.module.css?d10e","webpack://react-01/./src/components/main/profile/user/profile-status.module.css?d708","components/main/profile/user/profile-status-with-hooks.jsx","webpack://react-01/./src/components/main/profile/user/user.module.css?42c1","components/main/profile/user/user.jsx","webpack://react-01/./src/components/main/profile/posts/posts.module.css?7405","webpack://react-01/./src/components/main/profile/posts/post/post.module.css?7a47","components/main/profile/posts/post/post.jsx","components/main/profile/posts/posts.jsx","components/main/profile/posts/postsContainer.jsx","components/main/profile/profile.jsx","components/main/profile/profileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"parallax\":\"profile_parallax__2ResI\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"profile-status_container__HvjWR\",\"input\":\"profile-status_input__72uKi\",\"text\":\"profile-status_text__7aJ-9\"};","import React, { useEffect, useState } from \"react\";\r\nimport s from './profile-status.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateMode = () => setEditMode(true);\r\n    const deactivateMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            {editMode\r\n                ? <input className={s.input} onBlur={deactivateMode} onChange={onStatusChange} value={status} autoFocus maxLength={300} />\r\n                : <p className={s.text} onDoubleClick={activateMode}>{props.status || 'No status'}</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"user_user__s9iKW\",\"image\":\"user_image__YH3Qz\"};","import React from \"react\";\r\nimport Preloader from \"../../../common/preloader\";\r\nimport ProfileStatusWithHooks from \"./profile-status-with-hooks\";\r\nimport s from './user.module.css';\r\nimport defaultAvatar from '../../../../assets/user-avatar.png';\r\n\r\n// const bestAvatarEver = 'https://sib.fm/storage/article/April2021/Kb1KiTYol9I62IHiyBgV.jpeg';\r\n\r\n\r\nconst User = ({ profile, status, updateStatus }) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className={s.user}>\r\n            <img className={s.image} src={profile.photos.large ? profile.photos.large : defaultAvatar} alt=\"user\" />\r\n            <div>\r\n                <h2 className={s.header}>{profile.fullName}</h2>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"posts_posts__zalJ9\",\"header\":\"posts_header__wgjik\",\"textarea\":\"posts_textarea__RAmm7\",\"button\":\"posts_button__FtaA0\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"post_post__qbpcU\",\"avatar\":\"post_avatar__GHvuP\",\"username\":\"post_username__Ewa3W\"};","import React from \"react\";\r\nimport s from './post.module.css';\r\nimport defaultAvatar from '../../../../../assets/user-avatar.png';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img className={s.avatar} src={defaultAvatar} alt=\"user\" />\r\n            <div className={s.text}>\r\n                <p className={s.username}>{props.username}</p>\r\n                <p className={s.posttext}>{props.message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './posts.module.css';\r\nimport Post from \"./post/post\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Field } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../../common/forms-controls/forms-controls\";\r\n\r\nconst maxLength400 = maxLengthCreator(400);\r\n\r\nconst addPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} validate={[required, maxLength400]} className={s.textarea} name=\"post\" rows=\"5\" placeholder=\"your news...\" required />\r\n            <button className={s.button}>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({ form: 'addPost' })(addPostForm)\r\n\r\nconst Posts = React.memo(props => {\r\n    const postItems = props.postsData\r\n        .map(post => <Post username={post.username} message={post.message} />)\r\n\r\n\r\n    const onAddPost = (values) => {\r\n        props.addPost(values.post);\r\n    }\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return nextProps !== this.props && nextState !== this.state\r\n    // }\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <h3 className={s.header}>My posts</h3>\r\n            <AddPostReduxForm onSubmit={onAddPost} />\r\n            {postItems}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Posts;","import { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../../redux/profile-reducer\";\r\nimport Posts from \"./posts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (postText) => {\r\n            const action = addPostActionCreator(postText);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React from 'react';\r\nimport s from './profile.module.css';\r\nimport User from './user/user';\r\nimport PostsContainer from './posts/postsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <main className={s.content}>\r\n            <div className={s.parallax}></div>\r\n            <User profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <PostsContainer />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate, useMatch } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { profileAPI } from '../../../api/api';\r\nimport { getStatus, setUserProfile, updateStatus } from '../../../redux/profile-reducer';\r\nimport Profile from './profile';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId;\r\n        if (this.props.match) {\r\n            userId = this.props.match.params.userId;\r\n        } else if (this.props.isAuth) {\r\n            userId = this.props.authorizedUserId;\r\n        } else {\r\n            return <Navigate to=\"/login\" />;\r\n        }\r\n\r\n        profileAPI\r\n            .getProfile(userId)\r\n            .then(data => this.props.setUserProfile(data))\r\n        profileAPI\r\n            .getStatus(userId)\r\n            .then(status => this.props.updateStatus(status));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withRouter = (Component) => {\r\n    const RouterComponent = (props) => {\r\n        const match = useMatch('/profile/:userId/');\r\n        return <Component {...props} match={match} />;\r\n    }\r\n    return RouterComponent;\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { setUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onBlur","updateStatus","onChange","e","currentTarget","value","autoFocus","maxLength","onDoubleClick","profile","src","photos","large","defaultAvatar","alt","fullName","username","message","maxLength400","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","name","rows","placeholder","React","postItems","postsData","map","post","values","addPost","connect","state","profilePage","newPostText","dispatch","postText","action","addPostActionCreator","Posts","ProfileContainer","userId","this","match","params","isAuth","to","authorizedUserId","profileAPI","then","data","setUserProfile","withRouter","Component","useMatch","compose","auth","getStatus"],"sourceRoot":""}